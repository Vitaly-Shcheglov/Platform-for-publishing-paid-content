from celery import shared_task
from django.utils import timezone
from django.contrib.auth import get_user_model

User = get_user_model()


@shared_task
def deactivate_inactive_users():
    """
    Периодическая задача, которая деактивирует учетные записи пользователей,
    не заходивших в систему более месяца.

    Эта функция выполняется в фоновом режиме с использованием Celery и
    предназначена для автоматического управления состоянием учетных записей
    пользователей в системе.

    Процесс работы функции:
    1. Вычисляет дату, которая соответствует моменту, когда пользователь
       последний раз входил в систему. В данном случае это - 30 дней назад
       от текущей даты.
    2. Получает всех пользователей, которые не заходили в систему
       после вычисленной даты и имеют активный статус.
    3. Деактивирует учетные записи этих пользователей, изменяя атрибут
       is_active на False, и сохраняет изменения в базе данных.
    4. Выводит в консоль информацию о каждом деактивированном пользователе.

    Returns:
        None: Функция не возвращает значений, но выполняет изменения в базе данных.

    Примечания:
        - Убедитесь, что задача запланирована на выполнение с нужной периодичностью
          в конфигурации Celery.
        - Данная задача может быть дополнительно настроена для отправки уведомлений
          пользователям перед их деактивацией.
    """
    one_month_ago = timezone.now() - timezone.timedelta(days=30)
    inactive_users = User.objects.filter(last_login__lt=one_month_ago, is_active=True)

    for user in inactive_users:
        user.is_active = False
        user.save()
        print(f"Пользователь {user.email} был заблокирован.")
