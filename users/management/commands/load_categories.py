from django.core.management.base import BaseCommand
from django.db import connection


class Command(BaseCommand):
    """
    Команда для загрузки категорий и подкатегорий в базу данных.

    Этот класс создает таблицу категорий в базе данных, если она еще не существует,
    и загружает предопределенные категории и подкатегории.

    Атрибуты:
        help (str): Описание команды, которое будет отображаться в справке.
    """
    help = 'Загружает категории и подкатегории в базу данных'

    def handle(self, *args, **kwargs):
        """
        Выполняет команду для создания таблицы и загрузки категорий.

        Этот метод создает таблицу 'categories' в базе данных и заполняет её данными
        из предопределенного словаря категорий и подкатегорий.

        Args:
            *args: Позиционные аргументы, переданные в команду.
            **kwargs: Именованные аргументы, переданные в команду.

        Returns:
            None: Метод не возвращает значение, но выводит сообщение об успешном выполнении.
        """
        with connection.cursor() as cursor:

            cursor.execute('''
            CREATE TABLE IF NOT EXISTS categories (
                id SERIAL PRIMARY KEY,
                category TEXT NOT NULL,
                subcategory TEXT NOT NULL
            )
            ''')

            categories = {
                "Образование и курсы": [
                    "Видеоуроки и лекции",
                    "Электронные книги",
                    "Вебинары и мастер-классы"
                ],
                "Здоровье и фитнес": [
                    "Программы тренировок",
                    "Рецепты и диеты",
                    "Психологические советы и медитация"
                ],
                "Финансы и инвестиции": [
                    "Финансовые стратегии",
                    "Инвестиционные гайды",
                    "Анализ рынка"
                ],
                "Технологии и программирование": [
                    "Туториалы по программированию",
                    "Обзоры технологий",
                    "Технические решения"
                ],
                "Личный рост и развитие": [
                    "Книги по саморазвитию",
                    "Подкасты и интервью с экспертами",
                    "Курсы по навыкам общения и лидерства"
                ],
                "Искусство и креатив": [
                    "Уроки рисования и дизайна",
                    "Музыкальные курсы",
                    "Фотография и видеосъемка"
                ],
                "Путешествия и культура": [
                    "Гиды по странам и городам",
                    "Кулинарные рецепты со всего мира",
                    "Описание культурных особенностей"
                ],
                "Маркетинг и бизнес": [
                    "Стратегии цифрового маркетинга",
                    "Кейс-стадии успешных компаний",
                    "Консультации по ведению бизнеса"
                ],
                "Развлечения и увлечения": [
                    "Обзоры книг, фильмов и игр",
                    "Хобби и рукоделие",
                    "Обсуждения актуальных тем развлечений"
                ],
                "Наука и природа": [
                    "Популярные научные статьи",
                    "Исследования и открытия",
                    "Экологические инициативы"
                ]
            }

            for category, subcategories in categories.items():
                for subcategory in subcategories:
                    cursor.execute('''
                    INSERT INTO categories (category, subcategory)
                    VALUES (%s, %s)
                    ''', (category, subcategory))

        self.stdout.write(self.style.SUCCESS('Категории успешно загружены в базу данных.'))
